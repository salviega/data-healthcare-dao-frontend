{
  "address": "0xDA384F0B5a78a6ab6e4efF65A0432F29fF4b8E93",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "name": "ArrangeData",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "name": "StripData",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "getQueriesActive",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "_ids",
          "type": "uint256[]"
        }
      ],
      "name": "getTimeRent",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "queriesListByConsultant",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "queryCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_rentTime",
          "type": "uint256"
        }
      ],
      "name": "rentData",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalAsserts",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "transferFunds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xdaecb8ae4af40a010eeed7bed338cb6115c682aa2946bb221ca7310b7fcadcd7",
  "receipt": {
    "to": null,
    "from": "0xE8e1543235e6C35C656ef0b28526C61571583f4B",
    "contractAddress": "0xDA384F0B5a78a6ab6e4efF65A0432F29fF4b8E93",
    "transactionIndex": 7,
    "gasUsed": "584822",
    "logsBloom": "0x
    "blockHash": "0x8631daadfc656062a6ee3acf507a7252e93bfcf009a57215d63136ff37e0a83c",
    "transactionHash": "0xdaecb8ae4af40a010eeed7bed338cb6115c682aa2946bb221ca7310b7fcadcd7",
    "logs": [
      {
        "transactionIndex": 7,
        "blockNumber": 31629346,
        "transactionHash": "0xdaecb8ae4af40a010eeed7bed338cb6115c682aa2946bb221ca7310b7fcadcd7",
        "address": "0xDA384F0B5a78a6ab6e4efF65A0432F29fF4b8E93",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000e8e1543235e6c35c656ef0b28526c61571583f4b"
        ],
        "data": "0x",
        "logIndex": 12,
        "blockHash": "0x8631daadfc656062a6ee3acf507a7252e93bfcf009a57215d63136ff37e0a83c"
      },
      {
        "transactionIndex": 7,
        "blockNumber": 31629346,
        "transactionHash": "0xdaecb8ae4af40a010eeed7bed338cb6115c682aa2946bb221ca7310b7fcadcd7",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x000000000000000000000000e8e1543235e6c35c656ef0b28526c61571583f4b",
          "0x000000000000000000000000be188d6641e8b680743a4815dfa0f6208038960f"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000004bd9c1e04b3580000000000000000000000000000000000000000000000000420054bf5e2fcda000000000000000000000000000000000000000000002977fa8f94f45abed336000000000000000000000000000000000000000000000000041b47afd7de4982000000000000000000000000000000000000000000002977fa94529078c3868e",
        "logIndex": 13,
        "blockHash": "0x8631daadfc656062a6ee3acf507a7252e93bfcf009a57215d63136ff37e0a83c"
      }
    ],
    "blockNumber": 31629346,
    "cumulativeGasUsed": "1426850",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 2,
  "solcInputHash": "1500840479ecd79216db8555dc354424",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"name\":\"ArrangeData\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"name\":\"StripData\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getQueriesActive\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"}],\"name\":\"getTimeRent\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"queriesListByConsultant\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"queryCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rentTime\",\"type\":\"uint256\"}],\"name\":\"rentData\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAsserts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Funds.sol\":\"Funds\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Counters.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title Counters\\n * @author Matt Condon (@shrugs)\\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\\n *\\n * Include with `using Counters for Counters.Counter;`\\n */\\nlibrary Counters {\\n    struct Counter {\\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\\n        uint256 _value; // default: 0\\n    }\\n\\n    function current(Counter storage counter) internal view returns (uint256) {\\n        return counter._value;\\n    }\\n\\n    function increment(Counter storage counter) internal {\\n        unchecked {\\n            counter._value += 1;\\n        }\\n    }\\n\\n    function decrement(Counter storage counter) internal {\\n        uint256 value = counter._value;\\n        require(value > 0, \\\"Counter: decrement overflow\\\");\\n        unchecked {\\n            counter._value = value - 1;\\n        }\\n    }\\n\\n    function reset(Counter storage counter) internal {\\n        counter._value = 0;\\n    }\\n}\\n\",\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\"},\"contracts/Funds.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity >=0.8.0 <=0.8.17;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Counters.sol\\\";\\n\\ncontract Funds is Ownable {\\n\\tusing Counters for Counters.Counter;\\n\\tCounters.Counter public queryCounter;\\n\\n\\tstruct Query {\\n\\t\\tuint256 id;\\n\\t\\tuint256 deadline;\\n\\t\\taddress consultant;\\n\\t}\\n\\n\\tmapping(address => uint256[]) public queriesListByConsultant;\\n\\tmapping(uint256 => Query) private queryHistory;\\n\\n\\tevent ArrangeData(uint256, uint256, address, bool);\\n\\tevent StripData(uint256, uint256, address, bool);\\n\\n\\tfunction rentData(uint256 _rentTime) public payable {\\n\\t\\trequire(msg.value > 1 ether, \\\"You don't have enough MATIC\\\");\\n\\n\\t\\tqueryCounter.increment();\\n\\t\\tuint256 queryId = queryCounter.current();\\n\\n\\t\\tuint256 currentData = block.timestamp;\\n\\t\\tuint256 deadline = currentData + _rentTime;\\n\\n\\t\\tqueriesListByConsultant[msg.sender].push(queryId);\\n\\n\\t\\tQuery memory newQuery = Query(queryId, deadline, msg.sender);\\n\\t\\tqueryHistory[queryId] = newQuery;\\n\\n\\t\\temit ArrangeData(queryId, deadline, msg.sender, true);\\n\\t}\\n\\n\\tfunction getQueriesActive() public view returns (uint256[] memory) {\\n\\t\\treturn queriesListByConsultant[msg.sender];\\n\\t}\\n\\n\\tfunction getTimeRent(\\n\\t\\tuint256[] memory _ids\\n\\t) external view returns (uint256[] memory) {\\n\\t\\tuint256 currentTime = block.timestamp;\\n\\t\\tuint256[] memory arr = new uint256[](_ids.length);\\n\\n\\t\\tfor (uint256 index = 0; index < _ids.length; index++) {\\n\\t\\t\\tQuery memory currentQuery = queryHistory[_ids[index]];\\n\\t\\t\\tarr[index] = currentQuery.deadline - currentTime;\\n\\t\\t}\\n\\t\\treturn arr;\\n\\t}\\n\\n\\tfunction transferFunds(address _to, uint256 _amount) public onlyOwner {\\n\\t\\trequire(\\n\\t\\t\\t_amount <= address(this).balance,\\n\\t\\t\\t\\\"There aren't enough funds to withdraw\\\"\\n\\t\\t);\\n\\t\\t(bool response /*bytes memory data*/, ) = _to.call{value: _amount}(\\\"\\\");\\n\\t\\trequire(response, \\\"Tranfer revert\\\");\\n\\t}\\n\\n\\tfunction totalAsserts() public view returns (uint256) {\\n\\t\\treturn address(this).balance;\\n\\t}\\n\\n\\treceive() external payable {}\\n}\\n\",\"keccak256\":\"0x6556d32fb090c03b0263ea9cdfa0c21ba98eb640777631e641a0f274caa6a7e4\",\"license\":\"GPL-3.0\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61092a8061007e6000396000f3fe6080604052600436106100955760003560e01c806399818495116100595780639981849514610149578063d0b7ad611461015e578063e5c65d3014610183578063eb03d22514610196578063f2fde38b146101b657600080fd5b80632a86e6e5146100a1578063592a7ce4146100b6578063715018a6146100ec5780638da5cb5b14610101578063990dc9db1461012957600080fd5b3661009c57005b600080fd5b6100b46100af3660046106ea565b6101d6565b005b3480156100c257600080fd5b506100d66100d1366004610719565b610320565b6040516100e391906107d7565b60405180910390f35b3480156100f857600080fd5b506100b4610422565b34801561010d57600080fd5b506000546040516001600160a01b0390911681526020016100e3565b34801561013557600080fd5b506100b4610144366004610837565b610436565b34801561015557600080fd5b506100d6610535565b34801561016a57600080fd5b506001546101759081565b6040519081526020016100e3565b34801561018f57600080fd5b5047610175565b3480156101a257600080fd5b506101756101b1366004610837565b610596565b3480156101c257600080fd5b506100b46101d1366004610861565b6105c7565b670de0b6b3a764000034116102325760405162461bcd60e51b815260206004820152601b60248201527f596f7520646f6e2774206861766520656e6f756768204d41544943000000000060448201526064015b60405180910390fd5b610240600180546001019055565b600061024b60015490565b905042600061025a8483610899565b336000818152600260208181526040808420805460018082018355918652838620018a90558151606080820184528b82528185018981528285018981528d895260038752978590208351815590518185015596519690950180546001600160a01b0319166001600160a01b039097169690961790955581518a815292830187905290820194909452908101929092529192507fc9ebfb8f3f965477658b2771ce373f576a3c46145b519c13df85e491bc5ab2ab9060800160405180910390a15050505050565b606060004290506000835167ffffffffffffffff81111561034357610343610703565b60405190808252806020026020018201604052801561036c578160200160208202803683370190505b50905060005b845181101561041a57600060036000878481518110610393576103936108b2565b602090810291909101810151825281810192909252604090810160002081516060810183528154815260018201549381018490526002909101546001600160a01b03169181019190915291506103ea9085906108c8565b8383815181106103fc576103fc6108b2565b60209081029190910101525080610412816108db565b915050610372565b509392505050565b61042a610640565b610434600061069a565b565b61043e610640565b4781111561049c5760405162461bcd60e51b815260206004820152602560248201527f5468657265206172656e277420656e6f7567682066756e647320746f20776974604482015264686472617760d81b6064820152608401610229565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146104e9576040519150601f19603f3d011682016040523d82523d6000602084013e6104ee565b606091505b50509050806105305760405162461bcd60e51b815260206004820152600e60248201526d151c985b99995c881c995d995c9d60921b6044820152606401610229565b505050565b3360009081526002602090815260409182902080548351818402810184019094528084526060939283018282801561058c57602002820191906000526020600020905b815481526020019060010190808311610578575b5050505050905090565b600260205281600052604060002081815481106105b257600080fd5b90600052602060002001600091509150505481565b6105cf610640565b6001600160a01b0381166106345760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610229565b61063d8161069a565b50565b6000546001600160a01b031633146104345760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610229565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156106fc57600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b6000602080838503121561072c57600080fd5b823567ffffffffffffffff8082111561074457600080fd5b818501915085601f83011261075857600080fd5b81358181111561076a5761076a610703565b8060051b604051601f19603f8301168101818110858211171561078f5761078f610703565b6040529182528482019250838101850191888311156107ad57600080fd5b938501935b828510156107cb578435845293850193928501926107b2565b98975050505050505050565b6020808252825182820181905260009190848201906040850190845b8181101561080f578351835292840192918401916001016107f3565b50909695505050505050565b80356001600160a01b038116811461083257600080fd5b919050565b6000806040838503121561084a57600080fd5b6108538361081b565b946020939093013593505050565b60006020828403121561087357600080fd5b61087c8261081b565b9392505050565b634e487b7160e01b600052601160045260246000fd5b808201808211156108ac576108ac610883565b92915050565b634e487b7160e01b600052603260045260246000fd5b818103818111156108ac576108ac610883565b6000600182016108ed576108ed610883565b506001019056fea2646970667358221220206dbc6f161dc15f2f0669726eed7ed4be48752591c152149ed63afae29cdd8664736f6c63430008110033",
  "deployedBytecode": "0x6080604052600436106100955760003560e01c806399818495116100595780639981849514610149578063d0b7ad611461015e578063e5c65d3014610183578063eb03d22514610196578063f2fde38b146101b657600080fd5b80632a86e6e5146100a1578063592a7ce4146100b6578063715018a6146100ec5780638da5cb5b14610101578063990dc9db1461012957600080fd5b3661009c57005b600080fd5b6100b46100af3660046106ea565b6101d6565b005b3480156100c257600080fd5b506100d66100d1366004610719565b610320565b6040516100e391906107d7565b60405180910390f35b3480156100f857600080fd5b506100b4610422565b34801561010d57600080fd5b506000546040516001600160a01b0390911681526020016100e3565b34801561013557600080fd5b506100b4610144366004610837565b610436565b34801561015557600080fd5b506100d6610535565b34801561016a57600080fd5b506001546101759081565b6040519081526020016100e3565b34801561018f57600080fd5b5047610175565b3480156101a257600080fd5b506101756101b1366004610837565b610596565b3480156101c257600080fd5b506100b46101d1366004610861565b6105c7565b670de0b6b3a764000034116102325760405162461bcd60e51b815260206004820152601b60248201527f596f7520646f6e2774206861766520656e6f756768204d41544943000000000060448201526064015b60405180910390fd5b610240600180546001019055565b600061024b60015490565b905042600061025a8483610899565b336000818152600260208181526040808420805460018082018355918652838620018a90558151606080820184528b82528185018981528285018981528d895260038752978590208351815590518185015596519690950180546001600160a01b0319166001600160a01b039097169690961790955581518a815292830187905290820194909452908101929092529192507fc9ebfb8f3f965477658b2771ce373f576a3c46145b519c13df85e491bc5ab2ab9060800160405180910390a15050505050565b606060004290506000835167ffffffffffffffff81111561034357610343610703565b60405190808252806020026020018201604052801561036c578160200160208202803683370190505b50905060005b845181101561041a57600060036000878481518110610393576103936108b2565b602090810291909101810151825281810192909252604090810160002081516060810183528154815260018201549381018490526002909101546001600160a01b03169181019190915291506103ea9085906108c8565b8383815181106103fc576103fc6108b2565b60209081029190910101525080610412816108db565b915050610372565b509392505050565b61042a610640565b610434600061069a565b565b61043e610640565b4781111561049c5760405162461bcd60e51b815260206004820152602560248201527f5468657265206172656e277420656e6f7567682066756e647320746f20776974604482015264686472617760d81b6064820152608401610229565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146104e9576040519150601f19603f3d011682016040523d82523d6000602084013e6104ee565b606091505b50509050806105305760405162461bcd60e51b815260206004820152600e60248201526d151c985b99995c881c995d995c9d60921b6044820152606401610229565b505050565b3360009081526002602090815260409182902080548351818402810184019094528084526060939283018282801561058c57602002820191906000526020600020905b815481526020019060010190808311610578575b5050505050905090565b600260205281600052604060002081815481106105b257600080fd5b90600052602060002001600091509150505481565b6105cf610640565b6001600160a01b0381166106345760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610229565b61063d8161069a565b50565b6000546001600160a01b031633146104345760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610229565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156106fc57600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b6000602080838503121561072c57600080fd5b823567ffffffffffffffff8082111561074457600080fd5b818501915085601f83011261075857600080fd5b81358181111561076a5761076a610703565b8060051b604051601f19603f8301168101818110858211171561078f5761078f610703565b6040529182528482019250838101850191888311156107ad57600080fd5b938501935b828510156107cb578435845293850193928501926107b2565b98975050505050505050565b6020808252825182820181905260009190848201906040850190845b8181101561080f578351835292840192918401916001016107f3565b50909695505050505050565b80356001600160a01b038116811461083257600080fd5b919050565b6000806040838503121561084a57600080fd5b6108538361081b565b946020939093013593505050565b60006020828403121561087357600080fd5b61087c8261081b565b9392505050565b634e487b7160e01b600052601160045260246000fd5b808201808211156108ac576108ac610883565b92915050565b634e487b7160e01b600052603260045260246000fd5b818103818111156108ac576108ac610883565b6000600182016108ed576108ed610883565b506001019056fea2646970667358221220206dbc6f161dc15f2f0669726eed7ed4be48752591c152149ed63afae29cdd8664736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 396,
        "contract": "contracts/Funds.sol:Funds",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 11317,
        "contract": "contracts/Funds.sol:Funds",
        "label": "queryCounter",
        "offset": 0,
        "slot": "1",
        "type": "t_struct(Counter)7549_storage"
      },
      {
        "astId": 11329,
        "contract": "contracts/Funds.sol:Funds",
        "label": "queriesListByConsultant",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)"
      },
      {
        "astId": 11334,
        "contract": "contracts/Funds.sol:Funds",
        "label": "queryHistory",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_uint256,t_struct(Query)11324_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256[])",
        "numberOfBytes": "32",
        "value": "t_array(t_uint256)dyn_storage"
      },
      "t_mapping(t_uint256,t_struct(Query)11324_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct Funds.Query)",
        "numberOfBytes": "32",
        "value": "t_struct(Query)11324_storage"
      },
      "t_struct(Counter)7549_storage": {
        "encoding": "inplace",
        "label": "struct Counters.Counter",
        "members": [
          {
            "astId": 7548,
            "contract": "contracts/Funds.sol:Funds",
            "label": "_value",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_struct(Query)11324_storage": {
        "encoding": "inplace",
        "label": "struct Funds.Query",
        "members": [
          {
            "astId": 11319,
            "contract": "contracts/Funds.sol:Funds",
            "label": "id",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 11321,
            "contract": "contracts/Funds.sol:Funds",
            "label": "deadline",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 11323,
            "contract": "contracts/Funds.sol:Funds",
            "label": "consultant",
            "offset": 0,
            "slot": "2",
            "type": "t_address"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}